{"version":3,"sources":["components/Navigation.module.css","components/Home.jsx","components/Navigation.jsx","utils/cache.js","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Home","routes","to","text","Navigation","className","style","navbar","map","r","idx","link","activeClassName","active","exact","cache","InMemoryCache","typePolicies","client","ApolloClient","uri","connectToDevtools","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,OAAS,6B,wICShFC,EARF,WACT,OACI,8BACI,iD,iBCFNC,EAAS,CACb,CACEC,GAAI,IACJC,KAAM,SAgBKC,EAZI,WACjB,OACE,qBAAKC,UAAWC,IAAMC,OAAtB,SACGN,EAAOO,KAAI,SAACC,EAAEC,GAAH,OACV,cAAC,IAAD,CAAmBR,GAAIO,EAAEP,GAAIG,UAAWC,IAAMK,KAAMC,gBAAiBN,IAAMO,OAAQC,OAAK,EAAxF,SACGL,EAAEN,MADSO,SCZTK,EAAQ,IAAIC,gBAAc,CACnCC,aAAc,KCIZC,EAAS,IAAIC,eAAa,CAC5BC,IAEU,4CAEVC,mBAAmB,EACnBN,UAiBWO,MAdf,WACI,OACI,cAAC,iBAAD,CAAgBJ,OAAQA,EAAxB,SACI,eAAC,IAAD,WACI,cAAC,EAAD,IAEA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOK,KAAK,IAAIC,UAAWxB,YCXhCyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91e3c155.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navigation_navbar__2IRSB\",\"link\":\"Navigation_link__2Svw_\",\"active\":\"Navigation_active__fPOcU\"};","// import style from \"./Home.module.css\";\n\nconst Home = () => {\n    return (\n        <div>\n            <div>the snacket</div>\n        </div>\n    );\n};\n\nexport default Home;\n","import { NavLink } from \"react-router-dom\";\nimport style from \"./Navigation.module.css\";\n\nconst routes = [\n  {\n    to: \"/\",\n    text: \"Home\",\n  }\n];\n\nconst Navigation = () => {\n  return (\n    <nav className={style.navbar}>\n      {routes.map((r,idx) => (\n        <NavLink key={idx} to={r.to} className={style.link} activeClassName={style.active} exact>\n          {r.text}\n        </NavLink>\n      ))}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { InMemoryCache } from \"@apollo/client\";\n\nexport const cache = new InMemoryCache({\n    typePolicies: {},\n});\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ApolloProvider, ApolloClient } from \"@apollo/client\";\n\nimport Home from \"./components/Home\";\nimport Navigation from \"./components/Navigation\";\nimport { cache } from \"./utils/cache\";\n\nconst client = new ApolloClient({\n    uri:\n        process.env.NODE_ENV === \"production\"\n            ? \"https://the-snacket.herokuapp.com/graphql\"\n            : \"http://localhost:5000/graphql\",\n    connectToDevtools: true,\n    cache,\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <Navigation />\n\n                <Switch>\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}